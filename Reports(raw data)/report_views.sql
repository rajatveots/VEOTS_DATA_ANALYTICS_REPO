create or replace view ADMIN_BUSINESS_INSIGHTS_V as 
select 
    distinct
    MC.clientName "Client Name",
    PQR.CLIENTID "Client Id" ,
    REPLACE(MC.MASTERCLIENTADDRESS ,',','|') "Client address",
    MC.MASTERCLIENTEMAIL "Client contact email address",
    MC.CONTACTPERSONNAME "Client contact name",
    MC.CLIENTCONTACTNUM "client contact number",
    TO_CHAR(MC.CONTRACTDATE, 'YYYY-MM-DD HH24:MI:SS') "Contract date",
    MC.BILLINGDATE "Billing date",
    MC.DESIGNATION "Client contact designation",
    MC.TAXID "Client GSTIN/UIN",
    DATEDIFF(
    day, 
    MC.CREATEDAT, 
    CURRENT_DATE()
  ) "Cient Business period(Days)",
    MC.INVOICEPAYMENTCONTACTNAME "invoice payment contact name",
    MC.INVOICEPAYMENTCONTACTNUM "invoice payment contact number",
    MC.INVOICEPAYMENTCONTACTEMAIL "Invoice payment email address",
    MC.SERVICESTATUS "Client status",
    datediff(year, MC.CONTRACTDATE, CURRENT_DATE()) "Years Active",
    MCB.ACTIONTYPE "Client Status Action",
    MCB.DATE::DATE "Client Status Action Date",
    MCB.PERFORMEDBY_OID "Client status changed by",
    MCB.REASON "Client status change reason",
    PQR.BATCH_OID ,
	PQR.TYPE "QR Type",
	PQR.QRID "QRID",
	PQR.SCANTYPE,
	TO_CHAR(PQR.DATE, 'YYYY-MM-DD HH24:MI:SS') "Scan Date",       ----TO_CHAR(PQR.PURCHASEDATE, 'YYYY-MM-DD HH24:MI:SS')
	REPLACE(PQR.ESTABLISHMENTNAME ,',','|') "SCAN ESTABLISHMENT NAME",
	PQR.LAT "Scan locations (Latitude)" ,
	PQR.LONG "Scan locations (Longitude)",
	PQR.COUNTRY "Scan Country",
	PQR.STATE "Scan State",
	PQR.CITY "Scan City",
	PQR.WARRANTYAPP "Warranty applicable",
	PQR.PRODUCT_ID,
	PQR.PRODREACHEDCUS "Product reached customer",
	TO_CHAR(PQR.PURCHASEDATE, 'YYYY-MM-DD HH24:MI:SS') "Purchase date",
	PQR.CUSTOMER_AGE_GROUP "Customer Age Group",
	--PQR.CUSTOMER_COUNTRY "Customer Country",
	PQR.CUSTOMER_GENDER "Customer Gender",
    PQR.PRODNAME "Product name",
    PQR.BRAND "Brand name",
    PQR.MRP "MRP",
    PQR.MFGDATE "Mfg date",
    PQR.SHELFLIFE "shelf life",
    PQR.RATING "Product Rating",
    PQR.FEEDBACK "Product Feedback",
    PQR.BATCHNO "Batch number",
    PQR.PIMAGE "Product image",
    CASE WHEN PFV.PRODUCTS_OID IS NULL THEN FALSE ELSE TRUE END "FAKE REPORTED",
    PQR.LAT "Scan location (latitude)",
    PQR.LONG "Scan Location (Longitude)",
    PFV.LAT "Fake reported location (Latitude)",
    PFV.LONG "Fake reported location (Longitude)",
    PFV.REASONREP "Reason for reporting fake",
    --PFV.FAKECONTACT "Fake reported by Mobile number",
    --PFV.FAKEBILL "Fake reported bill",
    PQR.SERIALNO "Serial number",
    PQR.MANULICENSENO "Manufacturing license number",
    PQR.MANUADD "Manufacturing address",
    PQR.ADDDETAILS "Additional Details",
    PQR.ADDITIONALIMAGEDETAILS "additional image Details",
    PQR.MANUWEBSITELINK "webstie link",
    PQR.CITY "Scanned location (City)",
    --PFV.CITY "Fake reported location (City)",
    PQR.ISWARRANTYCONSENTGIVEN "Bill Consent given",
    datediff(days,current_date(),dateadd(days,PQR.WARRANTYPERIOD, PQR.PURCHASEDATE)) "Warranty remaining in days", 
    PQR.PRODVEDIOLINK "Video",
    PFV.ISREPORTCONSENTGIVEN "Fake reported consent given",
    PQR.PURCHASEDATE::DATE "Warranty start date",
    PQR.WARRANTYPERIOD,
    DATEADD(day , PQR.WARRANTYPERIOD,"Warranty start date")::DATE "Warranty End Date",
    CASE WHEN "Warranty End Date" < CURRENT_DATE() THEN TRUE ELSE FALSE END "Warranty Expired",
    case when PQR."batch expiry date" = 'notApplicable' then 'NA'
    when PQR."batch expiry date" = 'notAvailable' then PQR."product expiry date"::varchar
    else PQR."batch expiry date"::varchar end "final expiry date",
    CASE WHEN PQR."batch expiry date" = 'notApplicable' THEN FALSE ELSE TRUE END "Expiry Applicable",
    CASE WHEN "final expiry date" = 'NA' then 'NA' when
    "final expiry date" > current_date() THEN FALSE ELSE TRUE END "Product expired",
    case when "final expiry date" = 'NA' then 'NA' else
    DATEDIFF(days, CURRENT_DATE(), "final expiry date")::varchar end "Days left for expiry",
    CASE WHEN "Days left for expiry" = 'NA' THEN 'NA'
    WHEN "Days left for expiry"::NUMBER BETWEEN 0.1 * PQR.SHELFLIFE AND 0 THEN TRUE
    ELSE FALSE END "Product about to get expired ",
    CASE WHEN PQR.WARRANTYPERIOD = 0 THEN 'No Warranty' 
    ELSE DATEDIFF(days, CURRENT_DATE(), "Warranty End Date")::VARCHAR END "Days left for warranty Expiry",
    CASE WHEN "Days left for warranty Expiry" = 'No Warranty' THEN 'No Warranty' 
    WHEN DATEDIFF(days, CURRENT_DATE(), "Warranty End Date") BETWEEN 0.1 * PQR.WARRANTYPERIOD AND 0 THEN TRUE 
    ELSE FALSE END "Warranty About to get expired",
    X.QUANTITY_PRODUCT_QR "No of QR code generated",
    X.QUANTITY_TERT_QR "No of tertiary tracking generated",
    X.QUANTITY_QUAT_QR "No of Qautenary tracking generated",
    BQ.GENERATEDBY AS "QR Code Generated By",
    BQQ.GENERATEDBY AS "L2 QR Code Generated By",
    BQT.GENERATEDBY AS "L1 QR Code Generated By",
    PQR.PRESALECODE "Pre-Sale code",
    PQR.POSTSALECODE "Post-Sale code",
    PQR.BILLCOPY "Purchase bill",
    PQR.USERNAME "Customer Username",
    '"' || PQR.PHONENUM || '"' "Customer phone number",
    PQR.EMAIL "Customer email address",
    PQR.STATUS "Customer status",
    BEM.EXTRA_IMAGES,
    PQR.QR_GENERATION_DATE::DATE QR_GENERATION_DATE,
    TO_CHAR(PQR.QR_GENERATION_DATE, 'HH24:MI:SS')  QR_GENERATION_TIME
    --BQ.CREATEDAT "QR_DETAILS Created Date"
    --CASE WHEN BEV.INDEX = 0 then BEV.URL end "additional image 1",
    --CASE WHEN BEV.INDEX = 1 then BEV.URL end "additional image 2"
from REP_PRODUCT_QR_V PQR 
LEFT JOIN MASTERCLIENTS_V MC ON MC.MASTERCLIENTID = PQR.CLIENTID
LEFT JOIN MASTERCLIENTS_BLOCKINGHISTORY_V MCB ON MCB.MASTERCLIENT_OID = MC.OID
LEFT JOIN PRODUCTS_FAKEDETAILS_V PFV ON PFV.PRODUCTS_OID = PQR.PRODUCT_ID
LEFT JOIN  BATCHES_QRDETAILS_V  BQ ON BQ.BATCHES_OID = PQR.BATCH_OID
LEFT JOIN  BATCHES_TRACKINGQRDETAILS_QUAT_V  BQQ ON BQQ.BATCHES_OID =PQR.BATCH_OID
LEFT JOIN  BATCHES_TRACKINGQRDETAILS_TERT_V  BQT ON BQT.BATCHES_OID =PQR.BATCH_OID
LEFT JOIN (
    SELECT BATCHES_OID, listagg(URL,' | ') EXTRA_IMAGES FROM batches_extraimages_v
        GROUP BY BATCHES_OID) BEM ON BEM.BATCHES_OID = PQR.BATCH_OID
LEFT JOIN (
    SELECT 
          B.OID BATCH_OID, 
          SUM(BQR.QUANTITY) QUANTITY_PRODUCT_QR, 
          SUM(BQR_TERT.QUANTITY) QUANTITY_TERT_QR, 
          SUM(BQR_QUAT.QUANTITY) QUANTITY_QUAT_QR 
        FROM 
          BATCHES_V B, 
          BATCHES_QRDETAILS_V BQR, 
          BATCHES_TRACKINGQRDETAILS_QUAT_V BQR_QUAT, 
          BATCHES_TRACKINGQRDETAILS_TERT_V BQR_TERT 
        WHERE 
          B.OID = BQR.BATCHES_OID 
          AND B.OID = BQR_QUAT.BATCHES_OID 
          AND B.OID = BQR_TERT.BATCHES_OID 
        GROUP BY 
          B.OID
) X ON X.BATCH_OID = PQR.BATCH_OID;


---------------------------------------------------------------------------------

create or replace view ADMIN_TRACKING_INSIGHTS_V as
select 
distinct
QQ.CLIENTID "Client Id",
MC.CLIENTNAME,
QQ.LAT,
QQ.LONG,
QQ.CITY,
QQ.STATE,
QQ.COUNTRY,
TO_CHAR(QQ.DATE, 'YYYY-MM-DD HH24:MI:SS') "Scan Date",  --TO_CHAR(QQ.DATE, 'YYYY-MM-DD HH24:MI:SS')
B.BATCHNO,
QQ.QRID "L1 Tracking Code",
NULL "L2 Tracking Code",
B.MRP,
B.PRODNAME,
B.BRAND,
B.PIMAGE,
CASE WHEN B.EXPIRYDATE = 'notApplicable' THEN FALSE ELSE TRUE END "Expiry Applicable",
B.EXPIRYDATE,
B.MFGDATE,
B.SHELFLIFE,
X.QUANTITY_TERT_QR "No of Tertiary tracking generated",
X.QUANTITY_QUAT_QR "No of Quaternary tracking generated",
BQQ.GENERATEDBY AS "L1 QR Code Generated By",
NULL AS "L2 QR Code Generated By",
QQ.CONTACT "Tracking code scanned by phone number",
QQ.ESTABLISHMENTNAME "Establishment Name",
BQQ.CREATEDAT::DATE QR_GENERATION_DATE,
TO_CHAR(BQQ.CREATEDAT, 'HH24:MI:SS') QR_GENERATION_TIME
from QR_QUAT_V QQ
LEFT JOIN MASTERCLIENTS_V MC ON MC.MASTERCLIENTID = QQ.CLIENTID
LEFT JOIN BATCHES_V B ON B.OID = QQ.BATCH_OID
LEFT JOIN  BATCHES_TRACKINGQRDETAILS_QUAT_V  BQQ ON BQQ.BATCHES_OID =B.OID
--LEFT JOIN  BATCHES_TRACKINGQRDETAILS_TERT_V  BQT ON BQT.BATCHES_OID =B.OID
LEFT JOIN (
    SELECT 
          B.OID BATCH_OID, 
          SUM(BQR_TERT.QUANTITY) QUANTITY_TERT_QR, 
          SUM(BQR_QUAT.QUANTITY) QUANTITY_QUAT_QR 
        FROM 
          BATCHES_V B, 
          BATCHES_TRACKINGQRDETAILS_QUAT_V BQR_QUAT, 
          BATCHES_TRACKINGQRDETAILS_TERT_V BQR_TERT 
        WHERE  
             B.OID = BQR_QUAT.BATCHES_OID 
          AND B.OID = BQR_TERT.BATCHES_OID 
        GROUP BY 
          B.OID
) X ON X.BATCH_OID = B.OID
where "L1 Tracking Code" is not null


union all


select 
distinct
QQ.CLIENTID "Client Id",
MC.CLIENTNAME,
QQ.LAT,
QQ.LONG,
QQ.CITY,
QQ.STATE,
QQ.COUNTRY,
TO_CHAR(QQ.DATE, 'YYYY-MM-DD HH24:MI:SS') "Scan Date",  --TO_CHAR(QQ.DATE, 'YYYY-MM-DD HH24:MI:SS')
B.BATCHNO,
NULL "L1 Tracking Code",
QQ.QRID "L2 Tracking Code",
B.MRP,
B.PRODNAME,
B.BRAND,
B.PIMAGE,
CASE WHEN B.EXPIRYDATE = 'notApplicable' THEN FALSE ELSE TRUE END "Expiry Applicable",
B.EXPIRYDATE,
B.MFGDATE,
B.SHELFLIFE,
X.QUANTITY_TERT_QR "No of Tertiary tracking generated",
X.QUANTITY_QUAT_QR "No of Quaternary tracking generated",
NULL AS "L1 QR Code Generated By",
BQT.GENERATEDBY AS "L2 QR Code Generated By",
QQ.CONTACT "Tracking code scanned by phone number",
QQ.ESTABLISHMENTNAME "Establishment Name",
BQT.CREATEDAT::DATE QR_GENERATION_DATE,
TO_CHAR(BQT.CREATEDAT, 'HH24:MI:SS') QR_GENERATION_TIME
from QR_TERT_V QQ
LEFT JOIN MASTERCLIENTS_V MC ON MC.MASTERCLIENTID = QQ.CLIENTID
LEFT JOIN BATCHES_V B ON B.OID = QQ.BATCH_OID
--LEFT JOIN  BATCHES_TRACKINGQRDETAILS_QUAT_V  BQQ ON BQQ.BATCHES_OID =B.OID
LEFT JOIN  BATCHES_TRACKINGQRDETAILS_TERT_V  BQT ON BQT.BATCHES_OID =B.OID
LEFT JOIN (
    SELECT 
          B.OID BATCH_OID, 
          SUM(BQR_TERT.QUANTITY) QUANTITY_TERT_QR, 
          SUM(BQR_QUAT.QUANTITY) QUANTITY_QUAT_QR 
        FROM 
          BATCHES_V B, 
          BATCHES_TRACKINGQRDETAILS_QUAT_V BQR_QUAT, 
          BATCHES_TRACKINGQRDETAILS_TERT_V BQR_TERT 
        WHERE  
             B.OID = BQR_QUAT.BATCHES_OID 
          AND B.OID = BQR_TERT.BATCHES_OID 
        GROUP BY 
          B.OID
) X ON X.BATCH_OID = B.OID
where "L2 Tracking Code" is not null;

